(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{493:function(t,s,r){"use strict";r.r(s);var e=r(4),a=Object(e.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"无法连接mysql情况一"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#无法连接mysql情况一"}},[t._v("#")]),t._v(" 无法连接MySQL情况一")]),t._v(" "),r("p",[r("strong",[t._v("报错代码：")])]),t._v(" "),r("ol",[r("li",[t._v("QSqlDatabase: QMYSQL driver not loaded")]),t._v(" "),r("li",[t._v("QSqlDatabase: available drivers: QSQLITE QMYSQL QMYSQL3 QPSQL QPSQL7")])]),t._v(" "),r("p",[t._v("​        首先，我们使用QT连接MySQL的时候尽量保持位制相同，比如64位QT连接64位MySQL,32位QT连接32位MySQL。笔者的配置为 "),r("a",{attrs:{href:"http://download.qt.io/archive/qt/",target:"_blank",rel:"noopener noreferrer"}},[t._v("QT 5.12.8（64位）"),r("OutboundLink")],1),r("a",{attrs:{href:"https://dev.mysql.com/downloads/mysql/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL 5.7.21（64位）"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("strong",[t._v("解决方案")]),t._v("：")]),t._v(" "),r("p",[t._v("​       从MySQL（C:\\Program Files \\MySQL\\MySQL Server 5.7\\lib）中复制libmysql.dll文件到QT对应的安装目录下（D:\\Qt\\Qt5.12.8\\5.12.8\\mingw73_64\\bin）。")]),t._v(" "),r("h2",{attrs:{id:"无法连接mysql情况二"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#无法连接mysql情况二"}},[t._v("#")]),t._v(" 无法连接MySQL情况二")]),t._v(" "),r("p",[r("strong",[t._v("报错代码：")])]),t._v(" "),r("ol",[r("li",[t._v('"QSqlDatabase: QMYSQL driver not loaded')]),t._v(" "),r("li",[t._v(',QSqlDatabase: available drivers: QSQLITE QODBC QODBC3 QPSQL QPSQL7"')])]),t._v(" "),r("p",[t._v("​        首先，我们使用QT连接MySQL的时候尽量保持位制相同，比如64位QT连接64位MySQL,32位QT连接32位MySQL。笔者的配置为 "),r("a",{attrs:{href:"http://download.qt.io/archive/qt/",target:"_blank",rel:"noopener noreferrer"}},[t._v("QT 5.12.8（64位）"),r("OutboundLink")],1),r("a",{attrs:{href:"https://dev.mysql.com/downloads/mysql/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL 5.7.21（64位）"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("strong",[t._v("解决方案：")])]),t._v(" "),r("p",[t._v("​       我们可以从第二条报错代码中看到没有QMYSQL提示，说明错误原因极有可能是没有MySQL驱动，那么就需要我们进行手动编译。编译方法如下：")]),t._v(" "),r("p",[t._v("1.安装QT时，记得选择安装QT的源文件(Source文件)，如果发现QT安装目录中没有Src文件，请卸载重新安装。")]),t._v(" "),r("p",[r("img",{attrs:{src:"asset/1.png",alt:""}})]),t._v(" "),r("p",[t._v("2.在QT安装目录中找到：D:\\Qt\\Qt5.12.8\\5.12.8\\Src\\qtbase\\src\\plugins\\sqldrivers\\mysql\\mysql.pro文件，然后用QT打开该文件。")]),t._v(" "),r("p",[t._v("在文件中添加：")]),t._v(" "),r("p",[t._v('INCLUDEPATH +="C:\\Program Files\\MySQL\\include"（该路径是刚才下载解压备用的mysql的头文件路径）\nLIBS +="C:\\Program Files\\MySQL\\lib\\libmysql.lib"（该路径是刚才下载解压备用的mysql的库文件径）')]),t._v(" "),r("p",[t._v("DESTDIR = ../mysql/lib/(为了方便查找将来编译好的库文件，添加这个语句用来指明编译后的结果输出的位置)")]),t._v(" "),r("p",[t._v("#QMAKE_USE += mysql(同时一定要屏蔽QMAKE_USE += mysql:如下.如果不屏蔽会提示mysql库不存在)")]),t._v(" "),r("p",[t._v("具体如下图所示：")]),t._v(" "),r("p",[r("img",{attrs:{src:"asset/2.png",alt:""}})]),t._v(" "),r("p",[t._v("3.编译:修改完mysql.pro文件的内容后，点击构建(Ctrl+B或者左下方小锤子)，执行编译，等待下方构建完成后，在mysql文件夹（D:\\Qt\\Qt5.12.8\\5.12.8\\Src\\qtbase\\src\\plugins\\sqldrivers\\mysql）中就会多出一个lib文件夹。")]),t._v(" "),r("p",[r("img",{attrs:{src:"asset/3.png",alt:""}})]),t._v(" "),r("p",[t._v("4.配置：打开这个lib文件夹，里面有四个文件全部拷贝到你的QT安装路径D:\\Qt\\Qt5.12.8\\5.12.8\\mingw73_64\\plugins\\sqldrivers中，如下图：")]),t._v(" "),r("p",[r("img",{attrs:{src:"asset/4.png",alt:""}})]),t._v(" "),r("p",[t._v("好了，完成以上步骤我们重新打开工程文件，发现可以连接MySQL服务器了。")]),t._v(" "),r("h2",{attrs:{id:"使用mysql中文乱码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用mysql中文乱码"}},[t._v("#")]),t._v(" 使用MySQL中文乱码")]),t._v(" "),r("p",[r("strong",[t._v("错误情况")]),t._v("：")]),t._v(" "),r("p",[t._v("​     使用QT时，可以以英文和数字对MySQL进行读写，但是中文显示为乱码，且不能写入。")]),t._v(" "),r("p",[r("img",{attrs:{src:"asset/5.png",alt:""}})]),t._v(" "),r("p",[r("strong",[t._v("解决方法1：")])]),t._v(" "),r("p",[t._v('重新编译Qt的MySQL驱动，需要修改src/sql/drivers/mysql/qsql_mysql.cpp文件。要修改的部分如下：codec函数，注意return QTextCodec::codecForName("GBK");，是需要修改增加的语句。')]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('static QTextCodec* codec(MYSQL* mysql)\n{\nreturn QTextCodec::codecForName("GBK");\n#if MYSQL_VERSION_ID >= 32321\nQTextCodec* heuristicCodec = QTextCodec::codecForName(mysql_character_set_name(mysql));\nif (heuristicCodec)\nreturn heuristicCodec;\n#endif\nreturn QTextCodec::codecForLocale();\n}\n')])])]),r("p",[r("strong",[t._v("解决方法2：")])]),t._v(" "),r("p",[t._v("​       QT的默认编码是utf-8，而MySQL的编码是在安装数据库（或后续可更改）就时设置的。有时候两者可能不一样，所以只能在打开数据库连接操作的时候设置编码了，即在QSqlDatabase对象调用open()方法之后设置。设置方法为：")]),t._v(" "),r("div",{staticClass:"language-c++ extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("QSqlQuery query(db);\ndb.exec(\"SET NAMES 'GBK'\");\n")])])]),r("p",[r("strong",[t._v("解决方法3：")])]),t._v(" "),r("p",[t._v("​      出现乱码问题，首先确保Qt和mysql两边编码方式一样，全部改为UTF-8.")]),t._v(" "),r("p",[t._v("在MySQL中：我们通过show variables like ‘%char%’；可以查看MySQL的编码方式，如果有不是utf8的，请改成utf8，如下图：")]),t._v(" "),r("p",[r("img",{attrs:{src:"asset/6.png",alt:""}})]),t._v(" "),r("p",[t._v("在QT中：我们打开工具中的文本编辑器，把默认编码改为UTF-8，如下图：")]),t._v(" "),r("p",[r("img",{attrs:{src:"asset/7.png",alt:""}})]),t._v(" "),r("p",[r("strong",[t._v("结果：")])]),t._v(" "),r("p",[t._v("通过以上三种方式，可以解决大部分中文乱码问题,结果图如下：")]),t._v(" "),r("p",[r("img",{attrs:{src:"asset/8.png",alt:""}})]),t._v(" "),r("h2",{attrs:{id:"小结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),r("p",[t._v("本文只是简单的说明了QT+MySQL中无法连接数据库和中文乱码问题，情况仅为笔者所处环境，望各位读者对应自己情况修改问题，希望本文可以对你有所帮助。")])])}),[],!1,null,null,null);s.default=a.exports}}]);